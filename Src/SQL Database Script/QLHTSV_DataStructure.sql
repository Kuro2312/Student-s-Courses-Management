USE MASTER
GO
IF DB_ID('StudentCoursesManagement') IS NOT NULL
	DROP DATABASE StudentCoursesManagement
GO
CREATE DATABASE StudentCoursesManagement
GO

USE StudentCoursesManagement
SET DATEFORMAT DMY

CREATE TABLE SINHVIEN(
	MASV		CHAR(5),
	HOTEN		NVARCHAR(50),
	NGAYSINH	DATETIME,
	MALOP		CHAR(5),
	PRIMARY KEY (MASV)
)

CREATE TABLE LOP(
	MALOP		CHAR(5),
	TENLOP		CHAR(5),
	SISO		INT,
	PRIMARY KEY (MALOP)
)

CREATE TABLE MONHOC(
	MAMH		CHAR(5),
	TENMH		NVARCHAR(50),
	SOTIETLT	INT,
	SOTIETTH	INT, 
	SOCHOMAX	INT,
	CHECK (SOTIETLT > 30 AND SOTIETLT < 60),
	CHECK (SOTIETTH > 30 AND SOTIETTH < 60),
	CHECK (SOCHOMAX > 30 AND SOCHOMAX < 120),
	PRIMARY KEY (MAMH)
)

CREATE TABLE MHMO(
	MAMH		CHAR(5),
	NAM			INT,
	HOCKY		INT,
	CHECK (NAM >= 1990),
	CHECK (HOCKY = 1 OR HOCKY = 2)
	PRIMARY KEY (MAMH, NAM, HOCKI)
)

CREATE TABLE DANGKY(
	MASV		CHAR(5),
	MAMH		CHAR(5),
	NAM			INT,
	HOCKY		INT,
	DIEM		REAL, 
	CHECK (DIEM >= 0 AND DIEM <=10),
	PRIMARY KEY (MASV, MAMH, NAM, HOCKY, DIEM)
)

CREATE TABLE KETQUA(
	MASV		CHAR(5),
	NAM			INT,
	DIEMTB		REAL,
	XEPLOAI		CHAR(5),
	CHECK (DIEMTB >=0 AND DIEMTB <=10),
	CHECK (NAM >= 1990),
	PRIMARY KEY (MASV, NAM)
)

--FOREIGN KEY
ALTER TABLE SINHVIEN
ADD CONSTRAINT FK_SINHVIEN_LOP
	FOREIGN KEY (MALOP)
	REFERENCES LOP(MALOP)

ALTER TABLE MHMO
ADD CONSTRAINT FK_MHMO_MONHOC
	FOREIGN KEY (MAMH)
	REFERENCES MONHOC(MAMH)

ALTER TABLE DANGKY
ADD CONSTRAINT FK_DANGKY_SINHVIEN
	FOREIGN KEY (MASV)
	REFERENCES SINHVIEN(MASV),

	CONSTRAINT FK_DANGKY_MHMO
	FOREIGN KEY (MAMH, NAM, HOCKY)
	REFERENCES MHMO(MAMH, NAM, HOCKY)

ALTER TABLE KETQUA
ADD CONSTRAINT FK_KETQUA_SINHVIEN
	FOREIGN KEY (MASV)
	REFERENCES SINHVIEN(MASV)

--INTEGRITY CONSTRAINTS
--1 LOP(SISO) BANG TONG SINH VIEN
--LOP I(+), D(+), U(+(SISO))
--SINHVIEN I(+), D(+), U(+(MALOP))
IF OBJECT_ID('UTR_RB1', 'TR') IS NOT NULL
	DROP TRIGGER UTR_RB1
GO
CREATE TRIGGER UTR_RB1
ON LOP
FOR INSERT, UPDATE
AS BEGIN
	IF UPDATE(SISO)
		IF ((SELECT		SISO
			 FROM		INSERTED) <> (SELECT		COUNT(*)
									  FROM		SINHVIEN SV, INSERTED I
									  WHERE		SV.MALOP = I.MALOP))
		BEGIN
			RAISERROR('IC1: ERROR',16,1)
			ROLLBACK
		END
END
GO

